<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/profile/**"
		location="file:///C:/mp/profile_img/" />
	<resources mapping="/boardImg/**"
		location="file:///C:/mp/board_img/" />
	<resources mapping="/thumbnail/**"
		location="file:///C:/mp/board_thumbnail/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>


	<context:component-scan
		base-package="com.tripdiary.TMcontroller" />
	<context:component-scan
		base-package="com.tripdiary.TMdao" />
	<context:component-scan
		base-package="com.tripdiary.TMservice" />
	<context:component-scan
		base-package="com.tripdiary.TMvo" />
	<context:component-scan
		base-package="com.tripdiary.TMutil" />

	<context:component-scan
		base-package="com.tripdiary.HScontroller" />
	<context:component-scan
		base-package="com.tripdiary.HSvo"></context:component-scan>
	<context:component-scan
		base-package="com.tripdiary.HSdao"></context:component-scan>
	<context:component-scan
		base-package="com.tripdiary.HSservice"></context:component-scan>

	<context:component-scan
		base-package="org.project.*" />

	<!-- 여기부터 -->
	<beans:bean id="authInterceptor"
		class="org.project.regist.commons.AuthInterceptor" />
	<beans:bean id="ResignInterceptor"
		class="org.project.regist.commons.ResignInterceptor" />

	<interceptors>

		<interceptor>


			<!-- login 인증이 필요한 URI 들 -->

			<mapping path="/write" />
			<mapping path="/member/**" />
			<exclude-mapping path="/member/findId" />
			<!--로그인이 필요한 곳을 인터셉터로 처리 -->
			<beans:ref bean="authInterceptor" />
		</interceptor>

		<interceptor>
			<mapping path="/member/**" />
			<mapping path="/regist/**" />
			<mapping path="/**" />

			<exclude-mapping path="/member/resigncancel" />
			<exclude-mapping path="/" />
			<exclude-mapping path="/main" />
			<exclude-mapping path="/login/**" />
			<exclude-mapping path="/signIn" />

			<!-- 회원탈퇴 진행중인지 판단 -->
			<beans:ref bean="ResignInterceptor" />
		</interceptor>
	</interceptors>

</beans:beans>
